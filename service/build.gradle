import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id 'application'
	id 'org.springframework.boot' version "${springBootVersion}"
	id "io.freefair.lombok" version "${ioFreeFairLombok}"
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.graalvm.buildtools.native' version '0.10.4'
}

group = 'fi.poltsi.vempain'
version = project.hasProperty("releaseVersion") ? project.releaseVersion : '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
	mavenLocal()
    mavenCentral()
    maven { url = 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M5")
}

dependencies {
	implementation project(':api')
	// This needs to be built first in vempain-auth
	implementation group: 'fi.poltsi.vempain', name: 'vempain-auth-core', version: "${vempainAuthVersion}"
	implementation group: 'fi.poltsi.vempain', name: 'vempain-auth-api', version: "${vempainAuthVersion}"
	// Spring
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: "${springBootVersion}"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"
	developmentOnly group: 'org.springframework.boot', name: 'spring-boot-docker-compose', version: "${springBootVersion}"
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"
    implementation group: 'org.springframework.session', name: 'spring-session-core', version: "3.5.1"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "${springBootVersion}"
	implementation group: 'org.flywaydb', name: 'flyway-core', version: "${flywayVersion}"
	runtimeOnly group: 'org.flywaydb', name: 'flyway-database-postgresql', version: "${flywayVersion}"
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.9'
	// https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
	implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
	// https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api
	implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'
	// https://mvnrepository.com/artifact/commons-codec/commons-codec
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.18.0'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: "${jjwtVersion}"
	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20250107'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.7'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: "${jjwtVersion}"
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: "${jjwtVersion}"
    // developmentOnly group: 'org.springframework.ai', name: 'spring-ai-spring-boot-docker-compose', version: "${springAiVersion}"
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.5.1'
	// https://mvnrepository.com/artifact/org.junit/junit-bom
	testImplementation platform("org.junit:junit-bom:$junitVersion")
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: "$junitVersion"
	// https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.18.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

test {
	useJUnitPlatform()
}

processResources {
	filesMatching("**/application.yaml") {
		filter(ReplaceTokens, tokens: [
				'project.version': project.version
		])
	}
}
